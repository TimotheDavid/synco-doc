openapi: '3.0.2'
info:
  title: Synco API docs
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: dev url on localhost
  - url: https://synco.timothedavid.fr
    description: test and production host
tags:
  - name: Auth
    description: authentication part
  - name: Link
  - name: User
  - name: Base
paths:
  /api/v1/users:
    get:
      summary: get the user id by the token
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        200:
          description: userId of the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getUserByBearerToken"
  /{path}:
    get:
      tags:
        - Base
      responses:
        200:
          description: redirect to the link long url  given by the short
      parameters:
        - in: path
          name: path
          description: short url name
          schema:
            type: string
            example: helloworld
            description: short url link

  /api/v1/clicked/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Link
      summary: get all data from a link
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetClickedByLinkResponse"
        302:
          description: "link found it cannot be created two times"
  /api/v1/link/generate/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Link
      summary: generate a qr code with a created link
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        400:
          description: "need width and height as parameter or the uri contains withspace"
        500:
          description: image cannot be generated
  /api/v1/link/{id}:
    get:
      security:
        - BearerAuth: []
      summary: find all link for an user by UserId
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLinkByUserResponse"
      tags:
        - Link
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: UUID of the user to get the link
    post:
      security:
        - BearerAuth: []
      tags:
        - Link
      summary: create a link for a user given
      requestBody:
        required: true
        description: data for create a link
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLink"
      responses:
        '201':
          description: Created
          content:
            application/json:
              example:
                id: "48a5ad80-95bb-4a63-acb5-939cb4ceb1a9"
              schema:
                type: object
                properties:
                  id:
                    type: string
        302:
          description: link found it cannot be created two times

  /api/v1/auth/login:
    post:

      tags:
        - Auth
      summary: Login an user and get a bearer token
      requestBody:
        required: true
        description: user to login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                id: "9a980a14-9e72-4cff-b3f8-60e32689dfe7"
                token: "Q3H5rboaeWSEYx1Nb0ahdH76j1rzucNs5zHMHd6mLiDb7CKV4Y6xtiqb79660B6X"
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: user Id
                  token:
                    type: string
                    description: token for auth the user
        '404':
          description: user not found, cannot login
        '401':
          description: password not matches
  /api/v1/auth/register:
    post:
      tags:
        - Auth
      summary: Register the user
      requestBody:
        required: true
        description: user to register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
      responses:
        '200':
          description: OK
        '302':
          description: user found , cannot create


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    GetLinkByUserResponse:
      description: "| response of the get link by UserId"
      type: array
      properties:
        id:
          type: string
        name:
          type: string
        shortUrl:
          type: string
        longUrl:
          type: string
        nameUrl:
          type: string
        userId:
          type: string
        username:
          type: string
          description: "|
          if username or password is null
          the application will not redirect to auth url
          "
        password:
          type: string
        loginUrl:
          type: string
          description: url to redirect for login
        maxClicked:
          type: integer
        maxClickedRedirectionLink:
          type: string
        points:
          type: object
          properties:
            latitude:
              type: string
            longitude:
              type: string
    CreateLink:
      description: "|
        create a link with username/password, maximum redirection link 
        short and long url and geopoint of the qrcode if real
      "
      required: true
      example:
        userId: "2f43e699-c84d-49b9-968c-8d0d36b1eaf2"
        name: "helloworld"
        shortUrl: "helloworld"
        longUrl: "https://google.com"
        nameUrl: "google"
        maxClicked: 10
        loginUrl: "http://localhost/login"
        maxClickedRedirectionLink: "http://localhost:max"
        username: "test"
        password: "test"
        point:
          latitude: "68,216781"
          longitude: "-28,266620"
      properties:
        userId:
          type: string
        name:
          type: string
        shortUrl:
          type: string
        longUrl:
          type: string
        nameUrl:
          type: string
        maxClicked:
          type: integer
        loginUrl:
          type: string
        maxClickedRedirectionLink:
          type: string
        username:
          type: string
        password:
          type: string
        point:
          type: object
          properties:
            latitude:
              type: string
            longitude:
              type: string
    LoginBody:
      description: data for logged in the user
      required: true
      example:
        username: test
        password: test
      properties:
        username:
          type: string
        password:
          type: string
    RegisterBody:
      description: data for register an user
      required: true
      example:
        username: test
        password: test
        email: test@test.com
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    GetClickedByLinkResponse:
      description: get metadata clicked by link
      type: array
      properties:
        id:
          type: string
        host:
          type: string
        date:
          type: string
        platform:
          type: string
        linkId:
          type: string
    getUserByBearerToken:
      description: get user by bearer token
      example:
        id: d95d1bc0-2e78-4ccc-b938-b6ed3664bbe4
        username: test@test.com
        token: UgI3PPJ6PxkVqViOCB8T0fPgVx9ppeyXf6GTXFYc4G1pVeQ2JdidicO5bCSRhTPf
        email: reginald.cremin@hotmail.com
      properties:
        id:
          type: string
        username:
          type: string
        token:
          type: string
        email:
          type: string

